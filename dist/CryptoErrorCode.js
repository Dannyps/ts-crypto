"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CryptoErrorCode = void 0;
var CryptoErrorCode;
(function (CryptoErrorCode) {
    CryptoErrorCode["NotYetImplemented"] = "error.crypto.notYetImplemented";
    CryptoErrorCode["Unknown"] = "error.crypto.unknown";
    CryptoErrorCode["PasswordInsecure"] = "error.crypto.insecurePassword";
    CryptoErrorCode["WrongLength"] = "error.crypto.wrongLength";
    CryptoErrorCode["WrongParameters"] = "error.crypto.wrongMaximum";
    CryptoErrorCode["BufferAdd"] = "error.crypto.bufferAdd";
    CryptoErrorCode["WrongObject"] = "error.crypto.wrongObject";
    CryptoErrorCode["WrongBuffer"] = "error.crypto.wrongBuffer";
    CryptoErrorCode["WrongSerializedBuffer"] = "error.crypto.wrongSerializedBuffer";
    CryptoErrorCode["WrongHashAlgorithm"] = "error.crypto.hash.wrongHashAlgorithm";
    CryptoErrorCode["WrongId"] = "error.crypto.wrongId";
    CryptoErrorCode["EncryptionWrongAlgorithm"] = "error.crypto.wrongEncryptionAlgorithm";
    CryptoErrorCode["EncryptionWrongPlaintext"] = "error.crypto.encryption.wrongPlaintext";
    CryptoErrorCode["EncryptionWrongCipher"] = "error.crypto.encryption.wrongCipher";
    CryptoErrorCode["EncryptionWrongSecretKey"] = "error.crypto.encryption.wrongSecretKey";
    CryptoErrorCode["EncryptionWrongNonce"] = "error.crypto.encryption.wrongNonce";
    CryptoErrorCode["EncryptionWrongCounter"] = "error.crypto.encryption.wrongCounter";
    CryptoErrorCode["EncryptionKeyGeneration"] = "error.crypto.encryption.keyGeneration";
    CryptoErrorCode["EncryptionEncrypt"] = "error.crypto.encryption.encrypt";
    CryptoErrorCode["EncryptionDecrypt"] = "error.crypto.encryption.decrypt";
    CryptoErrorCode["EncryptionNoNonceNorCounter"] = "error.crypto.validation.noNonceNorCounter";
    CryptoErrorCode["EncryptionNonceAndCounter"] = "error.crypto.validation.nonceAndCounter";
    CryptoErrorCode["ExchangeKeyGeneration"] = "error.crypto.exchange.keyGeneration";
    CryptoErrorCode["ExchangeKeyDerivation"] = "error.crypto.exchange.keyDerivation";
    CryptoErrorCode["ExchangeWrongAlgorithm"] = "error.crypto.exchange.wrongExchangeAlgorithm";
    CryptoErrorCode["ExchangeWrongPrivateKey"] = "error.crypto.exchange.wrongPrivateKey";
    CryptoErrorCode["ExchangeWrongPublicKey"] = "error.crypto.exchange.wrongPublicKey";
    CryptoErrorCode["RelationshipNoPeer"] = "error.crypto.relationship.noPeer";
    CryptoErrorCode["RelationshipNoRequestorNorTemplator"] = "error.crypto.relationships.noRequestorNorTemplator";
    CryptoErrorCode["SignatureKeyGeneration"] = "error.crypto.signature.keyGeneration";
    CryptoErrorCode["SignatureWrongAlgorithm"] = "error.crypto.signature.wrongAlgorithm";
    CryptoErrorCode["SignatureWrongPrivateKey"] = "error.crypto.signature.wrongPrivateKey";
    CryptoErrorCode["SignatureWrongPublicKey"] = "error.crypto.signature.wrongPublicKey";
    CryptoErrorCode["SignatureSign"] = "error.crypto.signature.sign";
    CryptoErrorCode["SignatureVerify"] = "error.crypto.signature.verify";
    CryptoErrorCode["StateWrongSecretKey"] = "error.crypto.state.wrongSecretKey";
    CryptoErrorCode["StateWrongNonce"] = "error.crypto.state.wrongNonce";
    CryptoErrorCode["StateWrongCounter"] = "error.crypto.state.wrongCounter";
    CryptoErrorCode["StateWrongOrder"] = "error.crypto.state.orderDoesNotMatch";
    CryptoErrorCode["StateWrongType"] = "error.crypto.state.wrongType";
})(CryptoErrorCode || (exports.CryptoErrorCode = CryptoErrorCode = {}));
//# sourceMappingURL=CryptoErrorCode.js.map